<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="!V798e]K0V`/MS4XC5rD" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="h2W]o]$.u]B=/XZ2J@(c" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace poitch {" line1="" line2="    export enum poitchType{" line3="            //% block=poitch2" line4="            poitch2=2," line5="            //% block=poitch3" line6="            poitch3=3" line7="        };" line8="    export enum poitchSW{" line9="            //% block=p8" line10="            p8=8," line11="            //% block=p12" line12="            p12=12," line13="            //% block=p13" line14="            p13=13," line15="            //% block=p16" line16="            p16=16" line17="        };" line18="    " line19="    let initFlag = 0;" line20="    let pType=3;" line21="" line22="    /**" line23="     * set poitch type" line24="     * @param pType poitch type" line25="     */" line26="    //% block=&quot;initPoitch %pType&quot;" line27="    export function initPoitch(pt:poitchType): void {" line28="        pType = pt;" line29="" line30="        if (pType==poitchType.poitch2){" line31="            pins.digitalWritePin(DigitalPin.P2, 1);" line32="        }" line33="        pins.setPull(DigitalPin.P8, PinPullMode.PullDown);" line34="        pins.setPull(DigitalPin.P12, PinPullMode.PullDown);" line35="        pins.setPull(DigitalPin.P13, PinPullMode.PullDown);" line36="        pins.setPull(DigitalPin.P16, PinPullMode.PullDown);" line37="        initFlag=1;" line38="    }" line39="    /**" line40="     * get switch data" line41="     * @param sw test pin of switch" line42="     */" line43="    //% blockId=testSwitch block=&quot;test switch at|%sw&quot;" line44="    export function testSwitch(sw : poitchSW): boolean {" line45="        let wsw:number;" line46="    " line47="&#9;&#9;if (initFlag == 0){" line48="&#9;&#9;&#9;initPoitch(pType);" line49="&#9;&#9;}" line50="" line51="        if (sw==poitchSW.p8) wsw = pins.digitalReadPin(DigitalPin.P8)" line52="        if (sw==poitchSW.p12) wsw = pins.digitalReadPin(DigitalPin.P12)" line53="        if (sw==poitchSW.p13) wsw = pins.digitalReadPin(DigitalPin.P13)" line54="        if (sw==poitchSW.p16) wsw = pins.digitalReadPin(DigitalPin.P16)" line55="" line56="        if (wsw==1){" line57="            return true;" line58="        } else {" line59="            return false;" line60="        }" line61="    }" line62="}" numlines="63"></mutation></block></statement></block></xml>